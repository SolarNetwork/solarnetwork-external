//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.02 at 02:58:26 PM NZDT 
//


package openadr.model.v20b.power;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * The Transport Interface delineates the edges at either end of a transport segment.
 * 
 * <p>Java class for TransportInterfaceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TransportInterfaceType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="pointOfReceipt" type="{http://docs.oasis-open.org/ns/emix/2011/06/power}NodeType"/>
 *         &lt;element name="pointOfDelivery" type="{http://docs.oasis-open.org/ns/emix/2011/06/power}NodeType"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TransportInterfaceType", propOrder = {
    "pointOfReceipt",
    "pointOfDelivery"
})
@XmlRootElement(name = "transportInterface")
public class TransportInterface implements Serializable, Equals2, HashCode2, ToString2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(required = true)
    protected String pointOfReceipt;
    @XmlElement(required = true)
    protected String pointOfDelivery;

    /**
     * Default no-arg constructor
     * 
     */
    public TransportInterface() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TransportInterface(final String pointOfReceipt, final String pointOfDelivery) {
        this.pointOfReceipt = pointOfReceipt;
        this.pointOfDelivery = pointOfDelivery;
    }

    /**
     * Gets the value of the pointOfReceipt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPointOfReceipt() {
        return pointOfReceipt;
    }

    /**
     * Sets the value of the pointOfReceipt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPointOfReceipt(String value) {
        this.pointOfReceipt = value;
    }

    /**
     * Gets the value of the pointOfDelivery property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPointOfDelivery() {
        return pointOfDelivery;
    }

    /**
     * Sets the value of the pointOfDelivery property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPointOfDelivery(String value) {
        this.pointOfDelivery = value;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String thePointOfReceipt;
            thePointOfReceipt = this.getPointOfReceipt();
            strategy.appendField(locator, this, "pointOfReceipt", buffer, thePointOfReceipt, (this.pointOfReceipt!= null));
        }
        {
            String thePointOfDelivery;
            thePointOfDelivery = this.getPointOfDelivery();
            strategy.appendField(locator, this, "pointOfDelivery", buffer, thePointOfDelivery, (this.pointOfDelivery!= null));
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TransportInterface that = ((TransportInterface) object);
        {
            String lhsPointOfReceipt;
            lhsPointOfReceipt = this.getPointOfReceipt();
            String rhsPointOfReceipt;
            rhsPointOfReceipt = that.getPointOfReceipt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pointOfReceipt", lhsPointOfReceipt), LocatorUtils.property(thatLocator, "pointOfReceipt", rhsPointOfReceipt), lhsPointOfReceipt, rhsPointOfReceipt, (this.pointOfReceipt!= null), (that.pointOfReceipt!= null))) {
                return false;
            }
        }
        {
            String lhsPointOfDelivery;
            lhsPointOfDelivery = this.getPointOfDelivery();
            String rhsPointOfDelivery;
            rhsPointOfDelivery = that.getPointOfDelivery();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pointOfDelivery", lhsPointOfDelivery), LocatorUtils.property(thatLocator, "pointOfDelivery", rhsPointOfDelivery), lhsPointOfDelivery, rhsPointOfDelivery, (this.pointOfDelivery!= null), (that.pointOfDelivery!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String thePointOfReceipt;
            thePointOfReceipt = this.getPointOfReceipt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pointOfReceipt", thePointOfReceipt), currentHashCode, thePointOfReceipt, (this.pointOfReceipt!= null));
        }
        {
            String thePointOfDelivery;
            thePointOfDelivery = this.getPointOfDelivery();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pointOfDelivery", thePointOfDelivery), currentHashCode, thePointOfDelivery, (this.pointOfDelivery!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public TransportInterface withPointOfReceipt(String value) {
        setPointOfReceipt(value);
        return this;
    }

    public TransportInterface withPointOfDelivery(String value) {
        setPointOfDelivery(value);
        return this;
    }

}
