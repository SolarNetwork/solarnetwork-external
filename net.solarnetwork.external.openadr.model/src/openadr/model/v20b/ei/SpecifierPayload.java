//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.02 at 02:58:26 PM NZDT 
//


package openadr.model.v20b.ei;

import java.io.Serializable;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import openadr.model.v20b.BaseUnitType;
import openadr.model.v20b.CurrencyType;
import openadr.model.v20b.CurrentType;
import openadr.model.v20b.FrequencyType;
import openadr.model.v20b.OadrGBItemBase;
import openadr.model.v20b.PulseCountType;
import openadr.model.v20b.TemperatureType;
import openadr.model.v20b.ThermType;
import openadr.model.v20b.emix.ItemBaseType;
import openadr.model.v20b.power.EnergyApparentType;
import openadr.model.v20b.power.EnergyItemType;
import openadr.model.v20b.power.EnergyReactiveType;
import openadr.model.v20b.power.EnergyRealType;
import openadr.model.v20b.power.PowerApparentType;
import openadr.model.v20b.power.PowerItemType;
import openadr.model.v20b.power.PowerReactiveType;
import openadr.model.v20b.power.PowerRealType;
import openadr.model.v20b.power.VoltageType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Payload for use in Report Specifiers.
 * 
 * <p>Java class for SpecifierPayloadType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SpecifierPayloadType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/energyinterop/201110}rID"/>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/emix/2011/06}itemBase" minOccurs="0"/>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/energyinterop/201110}readingType"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SpecifierPayloadType", propOrder = {
    "rid",
    "itemBase",
    "readingType"
})
@XmlRootElement(name = "specifierPayload")
public class SpecifierPayload implements Serializable, Equals2, HashCode2, ToString2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "rID", required = true)
    protected String rid;
    @XmlElementRef(name = "itemBase", namespace = "http://docs.oasis-open.org/ns/emix/2011/06", type = JAXBElement.class, required = false)
    protected JAXBElement<? extends ItemBaseType> itemBase;
    @XmlElement(required = true)
    protected String readingType;

    /**
     * Default no-arg constructor
     * 
     */
    public SpecifierPayload() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public SpecifierPayload(final String rid, final JAXBElement<? extends ItemBaseType> itemBase, final String readingType) {
        this.rid = rid;
        this.itemBase = itemBase;
        this.readingType = readingType;
    }

    /**
     * Gets the value of the rid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRID() {
        return rid;
    }

    /**
     * Sets the value of the rid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRID(String value) {
        this.rid = value;
    }

    /**
     * What is measured or tracked in this report (Units).
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link TemperatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerRealType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PulseCountType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyReactiveType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerApparentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerReactiveType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VoltageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ThermType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyRealType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FrequencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link BaseUnitType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerItemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyApparentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ItemBaseType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyItemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link OadrGBItemBase }{@code >}
     *     
     */
    public JAXBElement<? extends ItemBaseType> getItemBase() {
        return itemBase;
    }

    /**
     * Sets the value of the itemBase property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link TemperatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerRealType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PulseCountType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyReactiveType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerApparentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerReactiveType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VoltageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ThermType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyRealType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FrequencyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link BaseUnitType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CurrentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PowerItemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyApparentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ItemBaseType }{@code >}
     *     {@link JAXBElement }{@code <}{@link EnergyItemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link OadrGBItemBase }{@code >}
     *     
     */
    public void setItemBase(JAXBElement<? extends ItemBaseType> value) {
        this.itemBase = ((JAXBElement<? extends ItemBaseType> ) value);
    }

    /**
     * Gets the value of the readingType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReadingType() {
        return readingType;
    }

    /**
     * Sets the value of the readingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReadingType(String value) {
        this.readingType = value;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theRID;
            theRID = this.getRID();
            strategy.appendField(locator, this, "rid", buffer, theRID, (this.rid!= null));
        }
        {
            JAXBElement<? extends ItemBaseType> theItemBase;
            theItemBase = this.getItemBase();
            strategy.appendField(locator, this, "itemBase", buffer, theItemBase, (this.itemBase!= null));
        }
        {
            String theReadingType;
            theReadingType = this.getReadingType();
            strategy.appendField(locator, this, "readingType", buffer, theReadingType, (this.readingType!= null));
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final SpecifierPayload that = ((SpecifierPayload) object);
        {
            String lhsRID;
            lhsRID = this.getRID();
            String rhsRID;
            rhsRID = that.getRID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rid", lhsRID), LocatorUtils.property(thatLocator, "rid", rhsRID), lhsRID, rhsRID, (this.rid!= null), (that.rid!= null))) {
                return false;
            }
        }
        {
            JAXBElement<? extends ItemBaseType> lhsItemBase;
            lhsItemBase = this.getItemBase();
            JAXBElement<? extends ItemBaseType> rhsItemBase;
            rhsItemBase = that.getItemBase();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemBase", lhsItemBase), LocatorUtils.property(thatLocator, "itemBase", rhsItemBase), lhsItemBase, rhsItemBase, (this.itemBase!= null), (that.itemBase!= null))) {
                return false;
            }
        }
        {
            String lhsReadingType;
            lhsReadingType = this.getReadingType();
            String rhsReadingType;
            rhsReadingType = that.getReadingType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "readingType", lhsReadingType), LocatorUtils.property(thatLocator, "readingType", rhsReadingType), lhsReadingType, rhsReadingType, (this.readingType!= null), (that.readingType!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theRID;
            theRID = this.getRID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rid", theRID), currentHashCode, theRID, (this.rid!= null));
        }
        {
            JAXBElement<? extends ItemBaseType> theItemBase;
            theItemBase = this.getItemBase();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemBase", theItemBase), currentHashCode, theItemBase, (this.itemBase!= null));
        }
        {
            String theReadingType;
            theReadingType = this.getReadingType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "readingType", theReadingType), currentHashCode, theReadingType, (this.readingType!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public SpecifierPayload withRID(String value) {
        setRID(value);
        return this;
    }

    public SpecifierPayload withItemBase(JAXBElement<? extends ItemBaseType> value) {
        setItemBase(value);
        return this;
    }

    public SpecifierPayload withReadingType(String value) {
        setReadingType(value);
        return this;
    }

}
