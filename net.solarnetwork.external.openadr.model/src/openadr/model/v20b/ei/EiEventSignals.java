//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.02 at 02:58:26 PM NZDT 
//


package openadr.model.v20b.ei;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for eiEventSignalsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="eiEventSignalsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/energyinterop/201110}eiEventSignal" maxOccurs="unbounded"/>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/energyinterop/201110}eiEventBaseline" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "eiEventSignalsType", propOrder = {
    "eiEventSignals",
    "eiEventBaseline"
})
public class EiEventSignals implements Serializable, Equals2, HashCode2, ToString2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "eiEventSignal", required = true)
    protected List<EiEventSignal> eiEventSignals;
    protected EiEventBaseline eiEventBaseline;

    /**
     * Default no-arg constructor
     * 
     */
    public EiEventSignals() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public EiEventSignals(final List<EiEventSignal> eiEventSignals, final EiEventBaseline eiEventBaseline) {
        this.eiEventSignals = eiEventSignals;
        this.eiEventBaseline = eiEventBaseline;
    }

    /**
     * Interval data for an event Gets the value of the eiEventSignals property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the eiEventSignals property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEiEventSignals().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EiEventSignal }
     * 
     * 
     */
    public List<EiEventSignal> getEiEventSignals() {
        if (eiEventSignals == null) {
            eiEventSignals = new ArrayList<EiEventSignal>();
        }
        return this.eiEventSignals;
    }

    /**
     * Interval data for a baseline
     * 
     * @return
     *     possible object is
     *     {@link EiEventBaseline }
     *     
     */
    public EiEventBaseline getEiEventBaseline() {
        return eiEventBaseline;
    }

    /**
     * Sets the value of the eiEventBaseline property.
     * 
     * @param value
     *     allowed object is
     *     {@link EiEventBaseline }
     *     
     */
    public void setEiEventBaseline(EiEventBaseline value) {
        this.eiEventBaseline = value;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            List<EiEventSignal> theEiEventSignals;
            theEiEventSignals = (((this.eiEventSignals!= null)&&(!this.eiEventSignals.isEmpty()))?this.getEiEventSignals():null);
            strategy.appendField(locator, this, "eiEventSignals", buffer, theEiEventSignals, ((this.eiEventSignals!= null)&&(!this.eiEventSignals.isEmpty())));
        }
        {
            EiEventBaseline theEiEventBaseline;
            theEiEventBaseline = this.getEiEventBaseline();
            strategy.appendField(locator, this, "eiEventBaseline", buffer, theEiEventBaseline, (this.eiEventBaseline!= null));
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EiEventSignals that = ((EiEventSignals) object);
        {
            List<EiEventSignal> lhsEiEventSignals;
            lhsEiEventSignals = (((this.eiEventSignals!= null)&&(!this.eiEventSignals.isEmpty()))?this.getEiEventSignals():null);
            List<EiEventSignal> rhsEiEventSignals;
            rhsEiEventSignals = (((that.eiEventSignals!= null)&&(!that.eiEventSignals.isEmpty()))?that.getEiEventSignals():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eiEventSignals", lhsEiEventSignals), LocatorUtils.property(thatLocator, "eiEventSignals", rhsEiEventSignals), lhsEiEventSignals, rhsEiEventSignals, ((this.eiEventSignals!= null)&&(!this.eiEventSignals.isEmpty())), ((that.eiEventSignals!= null)&&(!that.eiEventSignals.isEmpty())))) {
                return false;
            }
        }
        {
            EiEventBaseline lhsEiEventBaseline;
            lhsEiEventBaseline = this.getEiEventBaseline();
            EiEventBaseline rhsEiEventBaseline;
            rhsEiEventBaseline = that.getEiEventBaseline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eiEventBaseline", lhsEiEventBaseline), LocatorUtils.property(thatLocator, "eiEventBaseline", rhsEiEventBaseline), lhsEiEventBaseline, rhsEiEventBaseline, (this.eiEventBaseline!= null), (that.eiEventBaseline!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            List<EiEventSignal> theEiEventSignals;
            theEiEventSignals = (((this.eiEventSignals!= null)&&(!this.eiEventSignals.isEmpty()))?this.getEiEventSignals():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eiEventSignals", theEiEventSignals), currentHashCode, theEiEventSignals, ((this.eiEventSignals!= null)&&(!this.eiEventSignals.isEmpty())));
        }
        {
            EiEventBaseline theEiEventBaseline;
            theEiEventBaseline = this.getEiEventBaseline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eiEventBaseline", theEiEventBaseline), currentHashCode, theEiEventBaseline, (this.eiEventBaseline!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public EiEventSignals withEiEventSignals(EiEventSignal... values) {
        if (values!= null) {
            for (EiEventSignal value: values) {
                getEiEventSignals().add(value);
            }
        }
        return this;
    }

    public EiEventSignals withEiEventSignals(Collection<EiEventSignal> values) {
        if (values!= null) {
            getEiEventSignals().addAll(values);
        }
        return this;
    }

    public EiEventSignals withEiEventBaseline(EiEventBaseline value) {
        setEiEventBaseline(value);
        return this;
    }

}
