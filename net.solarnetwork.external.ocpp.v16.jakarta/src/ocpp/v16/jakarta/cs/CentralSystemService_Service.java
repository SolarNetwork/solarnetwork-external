
package ocpp.v16.jakarta.cs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * The Central System Service for the Open Charge Point Protocol
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "CentralSystemService", targetNamespace = "urn://Ocpp/Cs/2015/10/", wsdlLocation = "file:/Users/matt/Documents/SolarNetwork/Developer/git/solarnetwork-review/solarnetwork-external-jakarta/net.solarnetwork.external.ocpp.v16.jakarta/defs/1.6/src/wsdl/OCPP_CentralSystemService_1.6.wsdl")
public class CentralSystemService_Service
    extends Service
{

    private final static URL CENTRALSYSTEMSERVICE_WSDL_LOCATION;
    private final static WebServiceException CENTRALSYSTEMSERVICE_EXCEPTION;
    private final static QName CENTRALSYSTEMSERVICE_QNAME = new QName("urn://Ocpp/Cs/2015/10/", "CentralSystemService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/matt/Documents/SolarNetwork/Developer/git/solarnetwork-review/solarnetwork-external-jakarta/net.solarnetwork.external.ocpp.v16.jakarta/defs/1.6/src/wsdl/OCPP_CentralSystemService_1.6.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CENTRALSYSTEMSERVICE_WSDL_LOCATION = url;
        CENTRALSYSTEMSERVICE_EXCEPTION = e;
    }

    public CentralSystemService_Service() {
        super(__getWsdlLocation(), CENTRALSYSTEMSERVICE_QNAME);
    }

    public CentralSystemService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), CENTRALSYSTEMSERVICE_QNAME, features);
    }

    public CentralSystemService_Service(URL wsdlLocation) {
        super(wsdlLocation, CENTRALSYSTEMSERVICE_QNAME);
    }

    public CentralSystemService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CENTRALSYSTEMSERVICE_QNAME, features);
    }

    public CentralSystemService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CentralSystemService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CentralSystemService
     */
    @WebEndpoint(name = "CentralSystemServiceSoap12")
    public CentralSystemService getCentralSystemServiceSoap12() {
        return super.getPort(new QName("urn://Ocpp/Cs/2015/10/", "CentralSystemServiceSoap12"), CentralSystemService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CentralSystemService
     */
    @WebEndpoint(name = "CentralSystemServiceSoap12")
    public CentralSystemService getCentralSystemServiceSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("urn://Ocpp/Cs/2015/10/", "CentralSystemServiceSoap12"), CentralSystemService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CENTRALSYSTEMSERVICE_EXCEPTION!= null) {
            throw CENTRALSYSTEMSERVICE_EXCEPTION;
        }
        return CENTRALSYSTEMSERVICE_WSDL_LOCATION;
    }

}
